#include <stdio.h>
int stack[100], tos, maxsize; // global variables
void createstack(int size) {
 maxsize = size;
 tos = -1; // outside array location
}
void push(int element) {
 tos++;
 stack[tos] = element;
}
int isfull() {
 if (tos == maxsize - 1)
 return 1; // yes
 else
 return 0; // no
}
int pop() {
 int temp;
 temp = stack[tos];
 tos--;
 return(temp);
}
int isempty() {
 if (tos == -1)
 return 1; // yes
 else
 return 0; // no
}
int peek() {
 return(stack[tos]);
}
void printstack() {
 int i;
 for (i = tos; i >= 0; i--)
 printf("\n%d", stack[i]);
}
int main() {
 printf("vanshika khatri\n");
 int ch, e, size;
 printf("Enter size of stack:");
 scanf("%d", &size);
 createstack(size);
 do {
 // menu
 printf("\nStack menu\n----------\n1.Push\n2.Pop\n3.Peek\n4.Print\n0.Exit\n:");
 scanf("%d", &ch);
 switch(ch) {
 case 1:
 if (isfull() != 1) { // not full
 printf("\nEnter no:");
 scanf("%d", &e);
 push(e);
 printf("\nPushed %d on stack", e);
 } else {
 printf("\nStack is full");
 }
 break;
 case 2:
 if (isempty() != 1) { // not empty
 printf("\nPopped %d ", pop());
 } else {
 printf("\nStack is Empty");
 }
 break;
 
 case 3:
 if (isempty() != 1) { // not empty
 printf("\nElement at peek %d ", peek());
 } else {
 printf("\nStack is Empty");
 }
 break;
 case 4:
 if (isempty() != 1) { // not empty
 printf("\nElements on stack are\n");
 printstack();
 } else {
 printf("\nStack is Empty");
 }
 break;
 case 0:
 printf("\nExiting code, thanks for using code by amartechnavigator");
 break;
 default:
 printf("\nOption selected not in list");
 break;
 } // switch
 } while (ch != 0);
 return 0;
}
